{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Auth/auth.guard.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/shared/services/account.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./pages/choose/choose.module.ngfactory\": [\n\t\t\"./src/app/pages/choose/choose.module.ngfactory.js\",\n\t\t\"common\",\n\t\t\"pages-choose-choose-module-ngfactory\"\n\t],\n\t\"./pages/game/game.module.ngfactory\": [\n\t\t\"./src/app/pages/game/game.module.ngfactory.js\",\n\t\t\"common\",\n\t\t\"pages-game-game-module-ngfactory\"\n\t],\n\t\"./pages/login/login.module.ngfactory\": [\n\t\t\"./src/app/pages/login/login.module.ngfactory.js\",\n\t\t\"pages-login-login-module-ngfactory\"\n\t],\n\t\"./pages/statistic/statistic.module.ngfactory\": [\n\t\t\"./src/app/pages/statistic/statistic.module.ngfactory.js\",\n\t\t\"pages-statistic-statistic-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n  constructor(private router: Router) {\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('token') != null)\n      return true;\n    else {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './Auth/auth.guard';\n\n\nconst routes: Routes = [\n  { path: '', loadChildren: './pages/login/login.module#LoginModule' }, \n  { path: 'login', loadChildren: './pages/login/login.module#LoginModule' },\n  { path: 'choose', loadChildren: './pages/choose/choose.module#ChooseModule' },\n  { path: 'game', loadChildren: './pages/game/game.module#GameModule', canActivate:[AuthGuard] },\n  { path: 'statistic', loadChildren: './pages/statistic/statistic.module#StatisticModule' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BlackAngular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AccountService } from '../shared/services/account.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth/auth.interceptor';\n\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n\n\n@NgModule({\n   declarations: [\n      AppComponent,\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      ReactiveFormsModule,\n      HttpClientModule,\n      FormsModule,\n   ],\n   providers: [\n      {\n         provide: LocationStrategy, useClass: HashLocationStrategy\n      },\n      AccountService, {\n         provide: HTTP_INTERCEPTORS,\n         useClass: AuthInterceptor,\n         multi: true\n      }\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n constructor(private router: Router) { }\n\nintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (localStorage.getItem('token') != null) {\n        const clonedReq = req.clone({\n            headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\n        });\n        return next.handle(clonedReq).pipe(\n            tap(\n                succ => { },\n                err => {\n                   if (err.status == 401){\n                    localStorage.removeItem('token');\n                    this.router.navigateByUrl('login');\n                   }\n                }\n            )\n       )}\n    else\n    return next.handle(req.clone());\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:52077/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RequestSignUpAccountView } from '../models/Account/requestSignUpAccountView';\nimport { ResponseSignUpAccountView } from '../models/Account/responseSignUpAccountView';\nimport { ResponseGetUsersAccountView } from '../models/Account/responseGetUsersAccountView';\nimport { environment } from '../../environments/environment';\nimport * as jwt_decode from \"jwt-decode\";\nimport { ResponseTokenAccountView } from '../models/Account/responseTokenAccountView';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AccountService {\n  readonly rootUrl = environment.apiUrl;\n  \n  invalidLogin: boolean;\n\n  constructor(private http:HttpClient, private router: Router,) { }\n\n  public login(user : RequestSignUpAccountView){\n    var token = this.http.post<ResponseTokenAccountView>(this.rootUrl + 'Account/Login', user);\n    token.subscribe(\n      (response)=>{\n        localStorage.setItem('token', response.token);\n        this.router.navigateByUrl('choose');\n      }\n    );\n  }\n\n  public get(userId : string){\n    return this.http.get<ResponseSignUpAccountView>(this.rootUrl + 'Account/Get/' + userId);\n  }\n\n  public getNames(){\n    return this.http.get<ResponseGetUsersAccountView>(this.rootUrl + 'Account/GetUsers/');\n  }\n  \n  public getUserId() {\n    var token = localStorage.getItem('token');\n    var tokenClaims = jwt_decode(token, \"\");\n    return tokenClaims.UserId;\n  }\n\n  public logout() {\n    localStorage.removeItem('token');\n  }\n}\n"],"sourceRoot":""}