{"version":3,"sources":["webpack:///./src/app/pages/game/game-routing.module.ts","webpack:///./src/app/pages/game/game.component.html","webpack:///./src/app/pages/game/game.component.ts","webpack:///./src/app/pages/game/game.module.ts","webpack:///./src/shared/models/Game/requestGetCardGameView.ts","webpack:///./src/shared/models/Game/requestStartGameView.ts","webpack:///./src/shared/models/Game/requestStopGameView.ts","webpack:///./src/shared/models/Game/responseCardGameView.ts","webpack:///./src/shared/models/Game/responseStartGameView.ts","webpack:///./src/shared/models/Game/responseStopGameView.ts","webpack:///./src/shared/models/Game/responseWinnerGameView.ts","webpack:///./src/shared/services/game.service.ts"],"names":[],"mappings":"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","file":"pages-game-game-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GameComponent } from './game.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: GameComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GameRoutingModule { }\r\n","\r\nStart game\r\n<div class=\"selector\">\r\n  <div class=\"userLine\">\r\n    Bots Count \r\n    <select [(ngModel)]=\"startGameModel.countBots\" >\r\n      <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n    </select>\r\n    <button class=\"btn btn-success\" (click)=\"onStart()\">Start</button> \r\n    <a class=\"btn btn-primary\" routerLink=\"/choose\">Back</a>\r\n  </div> \r\n\r\n\r\n</div><br/><br/><br/>\r\n\r\n<div class=\"game\" *ngIf=\"isStop\">  \r\n    <div class=\"player\" *ngFor=\"let item of winnerModel\">\r\n      Name: {{item.name}}\r\n      Value: {{item.value}}\r\n    </div>\r\n</div><br>\r\n\r\n\r\n<div class=\"game\" *ngIf=\"isNewGame\">\r\n  <div class=\"player\" *ngIf=\"gameModel.user\">\r\n      <div class=\"playerProp\">Name: {{gameModel.user.name}}</div>\r\n      <div class=\"playerProp\">\r\n          <div class=\"card\" *ngFor=\"let card of gameModel.user.cards\">\r\n            <div class=\"cardProp\">Rank: {{card.rank}}</div>\r\n            <div class=\"cardProp\">Suit: {{card.suit}}</div>\r\n            <div class=\"cardProp\">Value: {{card.value}}</div>\r\n          </div>\r\n      </div>\r\n      <div class=\"playerProp\">\r\n        <div class=\"\">Score: {{gameModel.user.score}}</div>\r\n        <div class=\"gameButtons\">\r\n          <button class=\"btStart\" [disabled]=\"isStop\" (click)=\"onAddCard()\">Add Card</button> \r\n          <button class=\"btStop\" [disabled]=\"isStop\" (click)=\"onStopGame()\">Stop</button> \r\n       </div>\r\n      </div>\r\n  </div>\r\n  \r\n  <div class=\"player\" *ngFor=\"let bot of gameModel.bots\">\r\n    <div class=\"playerProp\">Name: {{bot.name}}</div>\r\n    <div class=\"playerProp\">\r\n        <div class=\"card\" *ngFor=\"let card of bot.cards\">\r\n            <div class=\"cardProp\">Rank: {{card.rank}}</div>\r\n            <div class=\"cardProp\">Suit: {{card.suit}}</div>\r\n            <div class=\"cardProp\">Value: {{card.value}}</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"playerProp\">Score: {{bot.score}}</div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- newGame\r\n<div class=\"game\">\r\n    <div class=\"player\" *ngIf=\"userPlayer\">\r\n        <div class=\"playerProp\">Name: {{userPlayer.name}}</div>\r\n        <div class=\"playerProp\">{{userPlayer.card}}\r\n            <div class=\"card\" *ngFor=\"let card of userPlayer.cards\">\r\n                <div class=\"cardProp\">Rank: {{card.ranks}}</div>\r\n                <div class=\"cardProp\">Suit: {{card.suit}}</div>\r\n                <div class=\"cardProp\">Value: {{card.value}}</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"playerProp\">Score: {{userPlayer.score}}</div>\r\n    </div>\r\n  <div class=\"player\" *ngFor=\"let bot of bots\">\r\n    <div class=\"playerProp\">Name: {{bot.name}}</div>\r\n    <div class=\"playerProp\">{{bot.card}}\r\n        <div class=\"card\" *ngFor=\"let card of bot.cards\">\r\n            <div class=\"cardProp\">Rank: {{card.ranks}}</div>\r\n            <div class=\"cardProp\">Suit: {{card.suit}}</div>\r\n            <div class=\"cardProp\">Value: {{card.value}}</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"playerProp\">Score: {{bot.score}}</div>\r\n  </div>\r\n\r\n  <div class=\"addCard\">\r\n      <button (click)=\"addCard()\">Add Card</button> \r\n  </div>\r\n</div> -->\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { AccountService } from '../../../shared/services/account.service';\r\nimport { GameService } from '../../../shared/services/game.service';\r\nimport { ResponseSignUpAccountView } from '../../../shared/models/Account/responseSignUpAccountView';\r\nimport { RequestStartGameView } from '../../../shared/models/Game/requestStartGameView';\r\nimport { ResponseStartGameView } from '../../../shared/models/Game/responseStartGameView';\r\nimport { RequestGetCardGameView } from '../../../shared/models/Game/requestGetCardGameView';\r\nimport { ResponseCardGameView } from '../../../shared/models/Game/responseCardGameView';\r\nimport { RequestStopGameView } from '../../../shared/models/Game/requestStopGameView';\r\nimport { ResponseStopGameView } from '../../../shared/models/Game/responseStopGameView';\r\nimport { ResponseWinnerGameView } from '../../../shared/models/Game/responseWinnerGameView';\r\n\r\n\r\n@Component({ \r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\n\r\nexport class GameComponent implements OnInit {\r\n\r\n  gameControl: FormGroup;\r\n  isNewGame: boolean = false;\r\n  isStop: boolean = false;\r\n  userModel = new ResponseSignUpAccountView;\r\n  startGameModel = new RequestStartGameView;\r\n  gameModel = new ResponseStartGameView;\r\n  getCardModel = new RequestGetCardGameView;\r\n  cardModel = new ResponseCardGameView;\r\n  stopModel = new RequestStopGameView;\r\n  stopGameModel = new ResponseStopGameView;\r\n  winnerModel = new ResponseWinnerGameView;\r\n\r\n  constructor(private router: Router, private accountService: AccountService, private gameService: GameService) { }\r\n\r\n  ngOnInit() {\r\n    this.getUserData();\r\n  }\r\n\r\n  onStopGame(){\r\n    this.isStop = true;\r\n    this.stopModel.userId = this.userModel.userId;\r\n    this.stopModel.gameId = this.gameModel.gameId;\r\n    this.gameService.stop(this.stopModel)    \r\n    .subscribe((response) => {\r\n      this.stopGameModel = response\r\n      this.gameModel.bots = this.stopGameModel.bots;\r\n      this.gameModel.cardsleft = this.stopGameModel.cardsleft\r\n      this.gameModel.user = this.stopGameModel.user;\r\n      this.winnerModel = this.stopGameModel.winner;\r\n    });\r\n  }\r\n\r\n  onAddCard() {\r\n    this.getCardModel.gameId = this.gameModel.gameId;\r\n    this.getCardModel.userId = this.userModel.userId;\r\n    this.gameService.getCard(this.getCardModel)\r\n    .subscribe((response) => {\r\n      this.cardModel = response\r\n      this.gameModel.user.cards.push(this.cardModel);\r\n      this.gameModel.user.score += this.cardModel.value;\r\n      if (this.gameModel.user.score > 21){\r\n        this.onStopGame();\r\n      }\r\n    });\r\n  }\r\n\r\n  onStart() {\r\n    this.isStop = false;\r\n    this.startGameModel.userId = this.userModel.userId;\r\n    this.gameService.start(this.startGameModel)\r\n      .subscribe((response) => {\r\n        this.gameModel = response;\r\n        console.log(response);\r\n        console.log(this.gameModel);\r\n      });\r\n    this.getUserData();\r\n    this.isNewGame = true;\r\n  }\r\n\r\n  getUserData() {\r\n    var userId = this.accountService.getUserId()\r\n    this.accountService.get(userId)\r\n      .subscribe((response) => {\r\n        this.userModel = response;\r\n      });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { GameRoutingModule } from './game-routing.module';\r\nimport { GameComponent } from './game.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GameComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    GameRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class GameModule { }\r\n","export class RequestGetCardGameView {\r\n    userId: string;\r\n    gameId: string;\r\n}\r\n","export class RequestStartGameView {\r\n    userId: string;\r\n    countBots: number;\r\n}\r\n","export class RequestStopGameView {\r\n    userId: string;\r\n    gameId: string;\r\n}\r\n","export class ResponseCardGameView {\r\n    rank: string;\r\n    suit: string;\r\n    value: number\r\n}\r\n","import { PlayerGameView } from './playerGameView';\r\n\r\nexport class ResponseStartGameView {\r\n    gameId: string;\r\n    bots: Array<PlayerGameView>;\r\n    user: PlayerGameView;\r\n    cardsleft: number;\r\n}\r\n","import { PlayerGameView } from './playerGameView';\r\nimport { ResponseWinnerGameView } from './responseWinnerGameView';\r\n\r\nexport class ResponseStopGameView {\r\n    gameId: string;\r\n    bots: Array<PlayerGameView>;\r\n    user: PlayerGameView;\r\n    cardsleft: number;\r\n    winner: ResponseWinnerGameView;\r\n}\r\n","import { WinnerModel } from \"./winnerModel\";\r\n\r\nexport class ResponseWinnerGameView {\r\n    winner: Array<WinnerModel>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RequestStartGameView } from '../models/Game/requestStartGameView';\r\nimport { RequestGetCardGameView } from '../models/Game/requestGetCardGameView';\r\nimport { ResponseStartGameView } from '../models/Game/responseStartGameView';\r\nimport { ResponseCardGameView } from '../models/Game/responseCardGameView';\r\nimport { RequestStopGameView } from '../models/Game/requestStopGameView';\r\nimport { ResponseStopGameView } from '../models/Game/responseStopGameView';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n  readonly rootUrl = environment.apiUrl;\r\n\r\n  response:any;\r\n  constructor(private http:HttpClient) { }\r\n\r\n  start(model : RequestStartGameView){\r\n    return this.http.post<ResponseStartGameView>(this.rootUrl + 'Game/StartGame', model);\r\n  }\r\n\r\n  getCard(model : RequestGetCardGameView){\r\n    return this.http.get<ResponseCardGameView>(this.rootUrl + 'Game/GetCard/' + model.userId + \"?gameId=\" + model.gameId);\r\n  }\r\n\r\n  stop(model : RequestStopGameView){\r\n    return this.http.post<ResponseStopGameView>(this.rootUrl + 'Game/Stop', model);\r\n  }\r\n}\r\n"],"sourceRoot":""}