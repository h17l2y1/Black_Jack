{"version":3,"sources":["webpack:///./src/app/pages/game/game-routing.module.ts","webpack:///./src/app/pages/game/game.component.html","webpack:///./src/app/pages/game/game.component.ts","webpack:///./src/app/pages/game/game.module.ts","webpack:///./src/shared/models/Game/RequestGetCardGameView.ts","webpack:///./src/shared/models/Game/RequestStartGameView.ts","webpack:///./src/shared/models/Game/RequestStopGameView.ts","webpack:///./src/shared/models/Game/ResponseCardGameView.ts","webpack:///./src/shared/models/Game/ResponseStartGameView.ts","webpack:///./src/shared/models/Game/ResponseStopGameView.ts","webpack:///./src/shared/models/Game/ResponseWinnerGameView.ts","webpack:///./src/shared/services/game.service.ts"],"names":[],"mappings":"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","file":"pages-game-game-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GameComponent } from './game.component';\n\nconst routes: Routes = [\n  { path: '', component: GameComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GameRoutingModule { }\n","\nStart game\n<div class=\"selector\">\n  <div class=\"userLine\">\n    Bots Count \n    <select [(ngModel)]=\"startGameModel.countBots\" >\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </select>\n  </div> \n  <button class=\"btn btn-success\" (click)=\"onStart()\">Start</button> \n  <a class=\"btn btn-primary\" routerLink=\"/choose\">Back</a>\n\n</div><br/><br/><br/>\n\n<div class=\"game\" *ngIf=\"isStop\">  \n    <div class=\"player\" *ngFor=\"let item of winnerModel\">\n      Name: {{item.name}}\n      Value: {{item.value}}\n    </div>\n</div><br>\n\n\n<div class=\"game\" *ngIf=\"isNewGame\">\n  <div class=\"player\" *ngIf=\"gameModel.user\">\n      <div class=\"playerProp\">Name: {{gameModel.user.name}}</div>\n      <div class=\"playerProp\">\n          <div class=\"card\" *ngFor=\"let card of gameModel.user.cards\">\n            <div class=\"cardProp\">Rank: {{card.ranks}}</div>\n            <div class=\"cardProp\">Suit: {{card.suit}}</div>\n            <div class=\"cardProp\">Value: {{card.value}}</div>\n          </div>\n      </div>\n      <div class=\"playerProp\">\n        <div class=\"\">Score: {{gameModel.user.score}}</div>\n        <div class=\"gameButtons\">\n          <button class=\"btStart\" [disabled]=\"isStop\" (click)=\"onAddCard()\">Add Card</button> \n          <button class=\"btStop\" [disabled]=\"isStop\" (click)=\"onStopGame()\">Stop</button> \n       </div>\n      </div>\n  </div>\n  \n  <div class=\"player\" *ngFor=\"let bot of gameModel.bots\">\n    <div class=\"playerProp\">Name: {{bot.name}}</div>\n    <div class=\"playerProp\">\n        <div class=\"card\" *ngFor=\"let card of bot.cards\">\n            <div class=\"cardProp\">Rank: {{card.ranks}}</div>\n            <div class=\"cardProp\">Suit: {{card.suit}}</div>\n            <div class=\"cardProp\">Value: {{card.value}}</div>\n        </div>\n    </div>\n    <div class=\"playerProp\">Score: {{bot.score}}</div>\n  </div>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- newGame\n<div class=\"game\">\n    <div class=\"player\" *ngIf=\"userPlayer\">\n        <div class=\"playerProp\">Name: {{userPlayer.name}}</div>\n        <div class=\"playerProp\">{{userPlayer.card}}\n            <div class=\"card\" *ngFor=\"let card of userPlayer.cards\">\n                <div class=\"cardProp\">Rank: {{card.ranks}}</div>\n                <div class=\"cardProp\">Suit: {{card.suit}}</div>\n                <div class=\"cardProp\">Value: {{card.value}}</div>\n            </div>\n        </div>\n        <div class=\"playerProp\">Score: {{userPlayer.score}}</div>\n    </div>\n  <div class=\"player\" *ngFor=\"let bot of bots\">\n    <div class=\"playerProp\">Name: {{bot.name}}</div>\n    <div class=\"playerProp\">{{bot.card}}\n        <div class=\"card\" *ngFor=\"let card of bot.cards\">\n            <div class=\"cardProp\">Rank: {{card.ranks}}</div>\n            <div class=\"cardProp\">Suit: {{card.suit}}</div>\n            <div class=\"cardProp\">Value: {{card.value}}</div>\n        </div>\n    </div>\n    <div class=\"playerProp\">Score: {{bot.score}}</div>\n  </div>\n\n  <div class=\"addCard\">\n      <button (click)=\"addCard()\">Add Card</button> \n  </div>\n</div> -->\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as jwt_decode from \"jwt-decode\";\nimport { FormGroup } from '@angular/forms';\n\nimport { AccountService } from '../../../shared/services/account.service';\nimport { GameService } from '../../../shared/services/game.service';\nimport { ResponseSignUpAccountView } from '../../../shared/models/Account/ResponseSignUpAccountView';\nimport { RequestStartGameView } from '../../../shared/models/Game/RequestStartGameView';\nimport { ResponseStartGameView } from '../../../shared/models/Game/ResponseStartGameView';\nimport { RequestGetCardGameView } from '../../../shared/models/Game/RequestGetCardGameView';\nimport { ResponseCardGameView } from '../../../shared/models/Game/ResponseCardGameView';\nimport { RequestStopGameView } from '../../../shared/models/Game/RequestStopGameView';\nimport { ResponseStopGameView } from '../../../shared/models/Game/ResponseStopGameView';\nimport { ResponseWinnerGameView } from '../../../shared/models/Game/ResponseWinnerGameView';\n\n\n@Component({ \n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\n\nexport class GameComponent implements OnInit {\n\n  gameControl: FormGroup;\n  isNewGame: boolean = false;\n  isStop: boolean = false;\n  userModel = new ResponseSignUpAccountView;\n  startGameModel = new RequestStartGameView;\n  gameModel = new ResponseStartGameView;\n  getCardModel = new RequestGetCardGameView;\n  cardModel = new ResponseCardGameView;\n  stopModel = new RequestStopGameView;\n  stopGameModel = new ResponseStopGameView;\n  winnerModel = new ResponseWinnerGameView;\n  constructor(private router: Router, private accountService: AccountService,\n  private gameService: GameService) { }\n\n  ngOnInit() {\n    this.getUserData();\n  }\n\n  onStopGame(){\n    this.isStop = true;\n    this.stopModel.userId = this.userModel.userId;\n    this.stopModel.gameId = this.gameModel.gameId;\n    this.gameService.stop(this.stopModel)    \n    .subscribe((response) => {\n      this.stopGameModel = response\n      this.gameModel.bots = this.stopGameModel.bots;\n      this.gameModel.cardsleft = this.stopGameModel.cardsleft\n      this.gameModel.user = this.stopGameModel.user;\n      this.winnerModel = this.stopGameModel.winner;\n    });\n  }\n\n  onAddCard() {\n    this.getCardModel.gameId = this.gameModel.gameId;\n    this.getCardModel.userId = this.userModel.userId;\n    this.gameService.getCard(this.getCardModel)\n    .subscribe((response) => {\n      this.cardModel = response\n      this.gameModel.user.cards.push(this.cardModel);\n      this.gameModel.user.score += this.cardModel.value;\n      if (this.gameModel.user.score > 21){\n        this.onStopGame();\n      }\n    });\n  }\n\n  onStart() {\n    this.isStop = false;\n    this.startGameModel.userId = this.userModel.userId;\n    this.gameService.start(this.startGameModel)\n      .subscribe((response) => {\n        this.gameModel = response;\n      });\n    this.getUserData();\n    this.isNewGame = true;\n  }\n\n  getUserData() {\n    var userId = this.getUserId()\n    this.accountService.get(userId)\n      .subscribe((response) => {\n        this.userModel = response;\n      });\n  }\n\n  getUserId() {\n    var token = localStorage.getItem('token');\n    var tokenClaims = jwt_decode(token, \"\");\n    return tokenClaims.UserId;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { GameRoutingModule } from './game-routing.module';\nimport { GameComponent } from './game.component';\n\n@NgModule({\n  declarations: [\n    GameComponent\n  ],\n  imports: [\n    CommonModule,\n    GameRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class GameModule { }\n","export class RequestGetCardGameView {\n    userId: string;\n    gameId: string;\n}\n","export class RequestStartGameView {\n    userId: string;\n    countBots: number;\n}\n","export class RequestStopGameView {\n    userId: string;\n    gameId: string;\n}\n","export class ResponseCardGameView {\n    ranks: string;\n    suit: string;\n    value: number\n}\n","import { PlayerGameView } from './PlayerGameView';\n\nexport class ResponseStartGameView {\n    gameId: string;\n    bots: Array<PlayerGameView>;\n    user: PlayerGameView;\n    cardsleft: number;\n}\n","import { PlayerGameView } from './PlayerGameView';\nimport { ResponseWinnerGameView } from './ResponseWinnerGameView';\n\nexport class ResponseStopGameView {\n    gameId: string;\n    bots: Array<PlayerGameView>;\n    user: PlayerGameView;\n    cardsleft: number;\n    winner: ResponseWinnerGameView;\n}\n","import { WinnerModel } from './WinnerModel';\n\nexport class ResponseWinnerGameView {\n    winner: Array<WinnerModel>;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RequestStartGameView } from '../models/Game/RequestStartGameView';\nimport { RequestGetCardGameView } from '../models/Game/RequestGetCardGameView';\nimport { ResponseStartGameView } from '../models/Game/ResponseStartGameView';\nimport { ResponseCardGameView } from '../models/Game/ResponseCardGameView';\nimport { RequestStopGameView } from '../models/Game/RequestStopGameView';\nimport { ResponseStopGameView } from '../models/Game/ResponseStopGameView';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n  readonly rootUrl = \"http://localhost:52077/\";\n\n  response:any;\n  constructor(private http:HttpClient) { }\n\n  start(model : RequestStartGameView){\n    return this.http.post<ResponseStartGameView>(this.rootUrl + 'api/Game/StartGame', model);\n  }\n\n  getCard(model : RequestGetCardGameView){\n    return this.http.post<ResponseCardGameView>(this.rootUrl + 'api/Game/GetCard', model);\n  }\n\n  stop(model : RequestStopGameView){\n    return this.http.post<ResponseStopGameView>(this.rootUrl + 'api/Game/Stop', model);\n  }\n}\n"],"sourceRoot":""}