{"version":3,"sources":["webpack:///./src/app/pages/game/game-routing.module.ts","webpack:///./src/app/pages/game/game.component.css","webpack:///./src/app/pages/game/game.component.html","webpack:///./src/app/pages/game/game.component.ts","webpack:///./src/app/pages/game/game.module.ts","webpack:///./src/shared/models/Game/requestGetCardGameView.ts","webpack:///./src/shared/models/Game/requestStartGameView.ts","webpack:///./src/shared/models/Game/requestStopGameView.ts","webpack:///./src/shared/models/Game/responseCardGameView.ts","webpack:///./src/shared/models/Game/responseStartGameView.ts","webpack:///./src/shared/models/Game/responseStopGameView.ts","webpack:///./src/shared/models/Game/responseWinnerGameView.ts","webpack:///./src/shared/services/game.service.ts"],"names":[],"mappings":"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","file":"pages-game-game-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GameComponent } from './game.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: GameComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GameRoutingModule { }\r\n","module.exports = \".userData{\\r\\n    background-color: rgb(197, 233, 233);\\r\\n    padding: 10px;\\r\\n    width: 320px;\\r\\n}\\r\\n.userLine{\\r\\n    margin: 10px;\\r\\n}\\r\\n.selector{\\r\\n    background-color: rgb(178, 214, 214);\\r\\n    padding: 10px;\\r\\n    width: 320px;\\r\\n}\\r\\n.option{\\r\\n    margin: 10px;\\r\\n}\\r\\n.game{\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n    align-items:stretch;\\r\\n    background-color: darkgreen;\\r\\n    color: white;\\r\\n    padding: 10px;\\r\\n}\\r\\n.player{\\r\\n    background-color: rgb(0, 43, 16);\\r\\n    padding: 4px;\\r\\n    margin: 10px;\\r\\n    /* width: 320px; */\\r\\n\\r\\n}\\r\\n.playerProp{\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    flex-grow: inherit;\\r\\n    margin: 10px;\\r\\n}\\r\\n.card{\\r\\n    background-color: azure; \\r\\n    justify-content: space-between;\\r\\n    padding: 4px;\\r\\n    margin: 10px;\\r\\n\\r\\n}\\r\\n.cardProp{\\r\\n    color: black;\\r\\n    margin: 10px;\\r\\n}\\r\\n.gameButtons{\\r\\n    display: flex;\\r\\n}\\r\\n.btStop{\\r\\n    margin-left: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZ2FtZS9nYW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQ0FBb0M7SUFDcEMsYUFBYTtJQUNiLFlBQVk7QUFDaEI7QUFDQTtJQUNJLFlBQVk7QUFDaEI7QUFFQTtJQUNJLG9DQUFvQztJQUNwQyxhQUFhO0lBQ2IsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLDJCQUEyQjtJQUMzQixZQUFZO0lBQ1osYUFBYTtBQUNqQjtBQUVBO0lBQ0ksZ0NBQWdDO0lBQ2hDLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCOztBQUV0QjtBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjtBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLDhCQUE4QjtJQUM5QixZQUFZO0lBQ1osWUFBWTs7QUFFaEI7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0FBQ2hCO0FBRUE7SUFDSSxhQUFhO0FBQ2pCO0FBRUE7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9nYW1lL2dhbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyRGF0YXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxOTcsIDIzMywgMjMzKTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICB3aWR0aDogMzIwcHg7XHJcbn1cclxuLnVzZXJMaW5le1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4uc2VsZWN0b3J7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTc4LCAyMTQsIDIxNCk7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgd2lkdGg6IDMyMHB4O1xyXG59XHJcbi5vcHRpb257XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5nYW1le1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGFsaWduLWl0ZW1zOnN0cmV0Y2g7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZ3JlZW47XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG4ucGxheWVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDQzLCAxNik7XHJcbiAgICBwYWRkaW5nOiA0cHg7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgICAvKiB3aWR0aDogMzIwcHg7ICovXHJcblxyXG59XHJcblxyXG4ucGxheWVyUHJvcHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBmbGV4LWdyb3c6IGluaGVyaXQ7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5jYXJke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYXp1cmU7IFxyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgcGFkZGluZzogNHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG5cclxufVxyXG5cclxuLmNhcmRQcm9we1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4uZ2FtZUJ1dHRvbnN7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uYnRTdG9we1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbn0iXX0= */\"","module.exports = \"\\r\\n<!-- Start game -->\\r\\n<div class=\\\"selector\\\">\\r\\n    <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">User Data from service</h5>\\r\\n          <p class=\\\"card-text\\\"> Id: {{transferModel.userId}}</p>\\r\\n          <p class=\\\"card-text\\\">Login: {{transferModel.userName}} </p>\\r\\n          <p class=\\\"card-text\\\">Points: {{transferModel.points}}</p>\\r\\n          <p class=\\\"card-text\\\">Role: {{transferModel.role}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"userLine\\\">\\r\\n    Bots Count \\r\\n    <select [(ngModel)]=\\\"startGameModel.countBots\\\" >\\r\\n      <option>1</option>\\r\\n      <option>2</option>\\r\\n      <option>3</option>\\r\\n      <option>4</option>\\r\\n      <option>5</option>\\r\\n    </select>\\r\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onStart()\\\">Start</button> \\r\\n    <a class=\\\"btn btn-primary\\\" routerLink=\\\"/choose\\\">Back</a>\\r\\n  </div> \\r\\n\\r\\n\\r\\n</div><br/><br/><br/>\\r\\n\\r\\n<div class=\\\"game\\\" *ngIf=\\\"isStop\\\">  \\r\\n    <div class=\\\"player\\\" *ngFor=\\\"let item of winnerModel\\\">\\r\\n      Name: {{item.name}}\\r\\n      Value: {{item.value}}\\r\\n    </div>\\r\\n</div><br>\\r\\n\\r\\n\\r\\n<div class=\\\"game\\\" *ngIf=\\\"isNewGame\\\">\\r\\n  <div class=\\\"player\\\" *ngIf=\\\"gameModel.user\\\">\\r\\n      <div class=\\\"playerProp\\\">Name: {{gameModel.user.name}}</div>\\r\\n      <div class=\\\"playerProp\\\">\\r\\n          <div class=\\\"card\\\" *ngFor=\\\"let card of gameModel.user.cards\\\">\\r\\n            <div class=\\\"cardProp\\\">Rank: {{card.rank}}</div>\\r\\n            <div class=\\\"cardProp\\\">Suit: {{card.suit}}</div>\\r\\n            <div class=\\\"cardProp\\\">Value: {{card.value}}</div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"playerProp\\\">\\r\\n        <div class=\\\"\\\">Score: {{gameModel.user.score}}</div>\\r\\n        <div class=\\\"gameButtons\\\">\\r\\n          <button class=\\\"btStart\\\" [disabled]=\\\"isStop\\\" (click)=\\\"onAddCard()\\\">Add Card</button> \\r\\n          <button class=\\\"btStop\\\" [disabled]=\\\"isStop\\\" (click)=\\\"onStopGame()\\\">Stop</button> \\r\\n       </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"player\\\" *ngFor=\\\"let bot of gameModel.bots\\\">\\r\\n    <div class=\\\"playerProp\\\">Name: {{bot.name}}</div>\\r\\n    <div class=\\\"playerProp\\\">\\r\\n        <div class=\\\"card\\\" *ngFor=\\\"let card of bot.cards\\\">\\r\\n            <div class=\\\"cardProp\\\">Rank: {{card.rank}}</div>\\r\\n            <div class=\\\"cardProp\\\">Suit: {{card.suit}}</div>\\r\\n            <div class=\\\"cardProp\\\">Value: {{card.value}}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"playerProp\\\">Score: {{bot.score}}</div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- newGame\\r\\n<div class=\\\"game\\\">\\r\\n    <div class=\\\"player\\\" *ngIf=\\\"userPlayer\\\">\\r\\n        <div class=\\\"playerProp\\\">Name: {{userPlayer.name}}</div>\\r\\n        <div class=\\\"playerProp\\\">{{userPlayer.card}}\\r\\n            <div class=\\\"card\\\" *ngFor=\\\"let card of userPlayer.cards\\\">\\r\\n                <div class=\\\"cardProp\\\">Rank: {{card.ranks}}</div>\\r\\n                <div class=\\\"cardProp\\\">Suit: {{card.suit}}</div>\\r\\n                <div class=\\\"cardProp\\\">Value: {{card.value}}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"playerProp\\\">Score: {{userPlayer.score}}</div>\\r\\n    </div>\\r\\n  <div class=\\\"player\\\" *ngFor=\\\"let bot of bots\\\">\\r\\n    <div class=\\\"playerProp\\\">Name: {{bot.name}}</div>\\r\\n    <div class=\\\"playerProp\\\">{{bot.card}}\\r\\n        <div class=\\\"card\\\" *ngFor=\\\"let card of bot.cards\\\">\\r\\n            <div class=\\\"cardProp\\\">Rank: {{card.ranks}}</div>\\r\\n            <div class=\\\"cardProp\\\">Suit: {{card.suit}}</div>\\r\\n            <div class=\\\"cardProp\\\">Value: {{card.value}}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"playerProp\\\">Score: {{bot.score}}</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"addCard\\\">\\r\\n      <button (click)=\\\"addCard()\\\">Add Card</button> \\r\\n  </div>\\r\\n</div> -->\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { AccountService } from '../../../shared/services/account.service';\r\nimport { GameService } from '../../../shared/services/game.service';\r\nimport { ResponseSignUpAccountView } from '../../../shared/models/Account/responseSignUpAccountView';\r\nimport { RequestStartGameView } from '../../../shared/models/Game/requestStartGameView';\r\nimport { ResponseStartGameView } from '../../../shared/models/Game/responseStartGameView';\r\nimport { RequestGetCardGameView } from '../../../shared/models/Game/requestGetCardGameView';\r\nimport { ResponseCardGameView } from '../../../shared/models/Game/responseCardGameView';\r\nimport { RequestStopGameView } from '../../../shared/models/Game/requestStopGameView';\r\nimport { ResponseStopGameView } from '../../../shared/models/Game/responseStopGameView';\r\nimport { ResponseWinnerGameView } from '../../../shared/models/Game/responseWinnerGameView';\r\nimport { TransferService } from '../../../shared/services/transfer.service';\r\n\r\n\r\n@Component({ \r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\n\r\nexport class GameComponent implements OnInit {\r\n\r\n  gameControl: FormGroup;\r\n  isNewGame: boolean = false;\r\n  isStop: boolean = false;\r\n  userModel = new ResponseSignUpAccountView;\r\n  startGameModel = new RequestStartGameView;\r\n  gameModel = new ResponseStartGameView;\r\n  getCardModel = new RequestGetCardGameView;\r\n  cardModel = new ResponseCardGameView;\r\n  stopModel = new RequestStopGameView;\r\n  stopGameModel = new ResponseStopGameView;\r\n  winnerModel = new ResponseWinnerGameView;\r\n  transferModel = new ResponseSignUpAccountView;\r\n\r\n  constructor(private router: Router, private accountService: AccountService, private gameService: GameService, private transferService: TransferService) { \r\n    transferService.modelAdded$.subscribe(model => this.onItemAdded(model));\r\n    console.log(this.transferModel);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUserData();\r\n  }\r\n\r\n  private onItemAdded(model: ResponseSignUpAccountView): void {\r\n    this.transferModel = model;\r\n    console.log(this.transferModel);\r\n  }\r\n\r\n  onStopGame(){\r\n    this.isStop = true;\r\n    this.stopModel.userId = this.userModel.userId;\r\n    this.stopModel.gameId = this.gameModel.gameId;\r\n    this.gameService.stop(this.stopModel)    \r\n    .subscribe((response) => {\r\n      this.stopGameModel = response;\r\n      this.gameModel.bots = this.stopGameModel.bots;\r\n      this.gameModel.cardsleft = this.stopGameModel.cardsleft\r\n      this.gameModel.user = this.stopGameModel.user;\r\n      this.winnerModel = this.stopGameModel.winner;\r\n    });\r\n  }\r\n\r\n  onAddCard() {\r\n    this.getCardModel.gameId = this.gameModel.gameId;\r\n    this.getCardModel.userId = this.userModel.userId;\r\n    this.gameService.getCard(this.getCardModel)\r\n    .subscribe((response) => {\r\n      this.cardModel = response\r\n      this.gameModel.user.cards.push(this.cardModel);\r\n      this.gameModel.user.score += this.cardModel.value;\r\n      if (this.gameModel.user.score > 21){\r\n        this.onStopGame();\r\n      }\r\n    });\r\n  }\r\n\r\n  onStart() {\r\n    this.isStop = false;\r\n    this.startGameModel.userId = this.userModel.userId;\r\n    this.gameService.start(this.startGameModel)\r\n      .subscribe((response) => {\r\n        this.gameModel = response;\r\n        console.log(response);\r\n        console.log(this.gameModel);\r\n      });\r\n    this.getUserData();\r\n    this.isNewGame = true;\r\n  }\r\n\r\n  getUserData() {\r\n    var userId = this.accountService.getUserId()\r\n    this.accountService.get(userId)\r\n      .subscribe((response) => {\r\n        this.userModel = response;\r\n      });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { GameRoutingModule } from './game-routing.module';\r\nimport { GameComponent } from './game.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GameComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    GameRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class GameModule { }\r\n","export class RequestGetCardGameView {\r\n    userId: string;\r\n    gameId: string;\r\n}\r\n","export class RequestStartGameView {\r\n    userId: string;\r\n    countBots: number;\r\n}\r\n","export class RequestStopGameView {\r\n    userId: string;\r\n    gameId: string;\r\n}\r\n","export class ResponseCardGameView {\r\n    rank: string;\r\n    suit: string;\r\n    value: number\r\n}\r\n","import { PlayerGameView } from './playerGameView';\r\n\r\nexport class ResponseStartGameView {\r\n    gameId: string;\r\n    bots: Array<PlayerGameView>;\r\n    user: PlayerGameView;\r\n    cardsleft: number;\r\n}\r\n","import { PlayerGameView } from './playerGameView';\r\nimport { ResponseWinnerGameView } from './responseWinnerGameView';\r\n\r\nexport class ResponseStopGameView {\r\n    gameId: string;\r\n    bots: Array<PlayerGameView>;\r\n    user: PlayerGameView;\r\n    cardsleft: number;\r\n    winner: ResponseWinnerGameView;\r\n}\r\n","import { WinnerModel } from \"./winnerModel\";\r\n\r\nexport class ResponseWinnerGameView {\r\n    winner: Array<WinnerModel>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RequestStartGameView } from '../models/Game/requestStartGameView';\r\nimport { RequestGetCardGameView } from '../models/Game/requestGetCardGameView';\r\nimport { ResponseStartGameView } from '../models/Game/responseStartGameView';\r\nimport { ResponseCardGameView } from '../models/Game/responseCardGameView';\r\nimport { RequestStopGameView } from '../models/Game/requestStopGameView';\r\nimport { ResponseStopGameView } from '../models/Game/responseStopGameView';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n  readonly rootUrl = environment.apiUrl;\r\n\r\n  response:any;\r\n  constructor(private http:HttpClient) { }\r\n\r\n  start(model : RequestStartGameView){\r\n    return this.http.post<ResponseStartGameView>(this.rootUrl + 'Game/StartGame', model);\r\n  }\r\n\r\n  getCard(model : RequestGetCardGameView){\r\n    return this.http.get<ResponseCardGameView>(this.rootUrl + 'Game/GetCard/?userId=' + model.userId + \"&gameId=\" + model.gameId);\r\n  }\r\n\r\n  stop(model : RequestStopGameView){\r\n    return this.http.post<ResponseStopGameView>(this.rootUrl + 'Game/Stop', model);\r\n  }\r\n}\r\n"],"sourceRoot":""}