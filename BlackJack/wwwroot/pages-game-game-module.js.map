{"version":3,"sources":["webpack:///./src/app/pages/game/game-routing.module.ts","webpack:///./src/app/pages/game/game.component.css","webpack:///./src/app/pages/game/game.component.html","webpack:///./src/app/pages/game/game.component.ts","webpack:///./src/app/pages/game/game.module.ts","webpack:///./src/shared/models/Game/requestGetCardGameView.ts","webpack:///./src/shared/models/Game/requestStartGameView.ts","webpack:///./src/shared/models/Game/requestStopGameView.ts","webpack:///./src/shared/models/Game/responseCardGameView.ts","webpack:///./src/shared/models/Game/responseStartGameView.ts","webpack:///./src/shared/models/Game/responseStopGameView.ts","webpack:///./src/shared/models/Game/responseWinnerGameView.ts","webpack:///./src/shared/services/game.service.ts"],"names":[],"mappings":"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","file":"pages-game-game-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GameComponent } from './game.component';\n\nconst routes: Routes = [\n  { path: '', component: GameComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GameRoutingModule { }\n","module.exports = \".userData{\\r\\n    background-color: rgb(197, 233, 233);\\r\\n    padding: 10px;\\r\\n    width: 320px;\\r\\n}\\r\\n.userLine{\\r\\n    margin: 10px;\\r\\n}\\r\\n.selector{\\r\\n    background-color: rgb(178, 214, 214);\\r\\n    padding: 10px;\\r\\n    width: 320px;\\r\\n}\\r\\n.option{\\r\\n    margin: 10px;\\r\\n}\\r\\n.game{\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n    align-items:stretch;\\r\\n    background-color: darkgreen;\\r\\n    color: white;\\r\\n    padding: 10px;\\r\\n}\\r\\n.player{\\r\\n    background-color: rgb(0, 43, 16);\\r\\n    padding: 4px;\\r\\n    margin: 10px;\\r\\n    /* width: 320px; */\\r\\n\\r\\n}\\r\\n.playerProp{\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    flex-grow: inherit;\\r\\n    margin: 10px;\\r\\n}\\r\\n.card{\\r\\n    background-color: azure; \\r\\n    justify-content: space-between;\\r\\n    padding: 4px;\\r\\n    margin: 10px;\\r\\n\\r\\n}\\r\\n.cardProp{\\r\\n    color: black;\\r\\n    margin: 10px;\\r\\n}\\r\\n.gameButtons{\\r\\n    display: flex;\\r\\n}\\r\\n.btStop{\\r\\n    margin-left: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZ2FtZS9nYW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQ0FBb0M7SUFDcEMsYUFBYTtJQUNiLFlBQVk7QUFDaEI7QUFDQTtJQUNJLFlBQVk7QUFDaEI7QUFFQTtJQUNJLG9DQUFvQztJQUNwQyxhQUFhO0lBQ2IsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLDJCQUEyQjtJQUMzQixZQUFZO0lBQ1osYUFBYTtBQUNqQjtBQUVBO0lBQ0ksZ0NBQWdDO0lBQ2hDLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCOztBQUV0QjtBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjtBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLDhCQUE4QjtJQUM5QixZQUFZO0lBQ1osWUFBWTs7QUFFaEI7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0FBQ2hCO0FBRUE7SUFDSSxhQUFhO0FBQ2pCO0FBRUE7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9nYW1lL2dhbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyRGF0YXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxOTcsIDIzMywgMjMzKTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICB3aWR0aDogMzIwcHg7XHJcbn1cclxuLnVzZXJMaW5le1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4uc2VsZWN0b3J7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTc4LCAyMTQsIDIxNCk7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgd2lkdGg6IDMyMHB4O1xyXG59XHJcbi5vcHRpb257XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5nYW1le1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGFsaWduLWl0ZW1zOnN0cmV0Y2g7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZ3JlZW47XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG4ucGxheWVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDQzLCAxNik7XHJcbiAgICBwYWRkaW5nOiA0cHg7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgICAvKiB3aWR0aDogMzIwcHg7ICovXHJcblxyXG59XHJcblxyXG4ucGxheWVyUHJvcHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBmbGV4LWdyb3c6IGluaGVyaXQ7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5jYXJke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYXp1cmU7IFxyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgcGFkZGluZzogNHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG5cclxufVxyXG5cclxuLmNhcmRQcm9we1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4uZ2FtZUJ1dHRvbnN7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uYnRTdG9we1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbn0iXX0= */\"","module.exports = \"\\nStart game\\n<div class=\\\"selector\\\">\\n  <div class=\\\"userLine\\\">\\n    Bots Count \\n    <select [(ngModel)]=\\\"startGameModel.countBots\\\" >\\n      <option>1</option>\\n      <option>2</option>\\n      <option>3</option>\\n      <option>4</option>\\n      <option>5</option>\\n    </select>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onStart()\\\">Start</button> \\n    <a class=\\\"btn btn-primary\\\" routerLink=\\\"/choose\\\">Back</a>\\n  </div> \\n\\n\\n</div><br/><br/><br/>\\n\\n<div class=\\\"game\\\" *ngIf=\\\"isStop\\\">  \\n    <div class=\\\"player\\\" *ngFor=\\\"let item of winnerModel\\\">\\n      Name: {{item.name}}\\n      Value: {{item.value}}\\n    </div>\\n</div><br>\\n\\n\\n<div class=\\\"game\\\" *ngIf=\\\"isNewGame\\\">\\n  <div class=\\\"player\\\" *ngIf=\\\"gameModel.user\\\">\\n      <div class=\\\"playerProp\\\">Name: {{gameModel.user.name}}</div>\\n      <div class=\\\"playerProp\\\">\\n          <div class=\\\"card\\\" *ngFor=\\\"let card of gameModel.user.cards\\\">\\n            <div class=\\\"cardProp\\\">Rank: {{card.ranks}}</div>\\n            <div class=\\\"cardProp\\\">Suit: {{card.suit}}</div>\\n            <div class=\\\"cardProp\\\">Value: {{card.value}}</div>\\n          </div>\\n      </div>\\n      <div class=\\\"playerProp\\\">\\n        <div class=\\\"\\\">Score: {{gameModel.user.score}}</div>\\n        <div class=\\\"gameButtons\\\">\\n          <button class=\\\"btStart\\\" [disabled]=\\\"isStop\\\" (click)=\\\"onAddCard()\\\">Add Card</button> \\n          <button class=\\\"btStop\\\" [disabled]=\\\"isStop\\\" (click)=\\\"onStopGame()\\\">Stop</button> \\n       </div>\\n      </div>\\n  </div>\\n  \\n  <div class=\\\"player\\\" *ngFor=\\\"let bot of gameModel.bots\\\">\\n    <div class=\\\"playerProp\\\">Name: {{bot.name}}</div>\\n    <div class=\\\"playerProp\\\">\\n        <div class=\\\"card\\\" *ngFor=\\\"let card of bot.cards\\\">\\n            <div class=\\\"cardProp\\\">Rank: {{card.ranks}}</div>\\n            <div class=\\\"cardProp\\\">Suit: {{card.suit}}</div>\\n            <div class=\\\"cardProp\\\">Value: {{card.value}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"playerProp\\\">Score: {{bot.score}}</div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- newGame\\n<div class=\\\"game\\\">\\n    <div class=\\\"player\\\" *ngIf=\\\"userPlayer\\\">\\n        <div class=\\\"playerProp\\\">Name: {{userPlayer.name}}</div>\\n        <div class=\\\"playerProp\\\">{{userPlayer.card}}\\n            <div class=\\\"card\\\" *ngFor=\\\"let card of userPlayer.cards\\\">\\n                <div class=\\\"cardProp\\\">Rank: {{card.ranks}}</div>\\n                <div class=\\\"cardProp\\\">Suit: {{card.suit}}</div>\\n                <div class=\\\"cardProp\\\">Value: {{card.value}}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"playerProp\\\">Score: {{userPlayer.score}}</div>\\n    </div>\\n  <div class=\\\"player\\\" *ngFor=\\\"let bot of bots\\\">\\n    <div class=\\\"playerProp\\\">Name: {{bot.name}}</div>\\n    <div class=\\\"playerProp\\\">{{bot.card}}\\n        <div class=\\\"card\\\" *ngFor=\\\"let card of bot.cards\\\">\\n            <div class=\\\"cardProp\\\">Rank: {{card.ranks}}</div>\\n            <div class=\\\"cardProp\\\">Suit: {{card.suit}}</div>\\n            <div class=\\\"cardProp\\\">Value: {{card.value}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"playerProp\\\">Score: {{bot.score}}</div>\\n  </div>\\n\\n  <div class=\\\"addCard\\\">\\n      <button (click)=\\\"addCard()\\\">Add Card</button> \\n  </div>\\n</div> -->\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as jwt_decode from \"jwt-decode\";\nimport { FormGroup } from '@angular/forms';\n\nimport { AccountService } from '../../../shared/services/account.service';\nimport { GameService } from '../../../shared/services/game.service';\nimport { ResponseSignUpAccountView } from '../../../shared/models/Account/responseSignUpAccountView';\nimport { RequestStartGameView } from '../../../shared/models/Game/requestStartGameView';\nimport { ResponseStartGameView } from '../../../shared/models/Game/responseStartGameView';\nimport { RequestGetCardGameView } from '../../../shared/models/Game/requestGetCardGameView';\nimport { ResponseCardGameView } from '../../../shared/models/Game/responseCardGameView';\nimport { RequestStopGameView } from '../../../shared/models/Game/requestStopGameView';\nimport { ResponseStopGameView } from '../../../shared/models/Game/responseStopGameView';\nimport { ResponseWinnerGameView } from '../../../shared/models/Game/responseWinnerGameView';\n\n\n@Component({ \n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\n\nexport class GameComponent implements OnInit {\n\n  gameControl: FormGroup;\n  isNewGame: boolean = false;\n  isStop: boolean = false;\n  userModel = new ResponseSignUpAccountView;\n  startGameModel = new RequestStartGameView;\n  gameModel = new ResponseStartGameView;\n  getCardModel = new RequestGetCardGameView;\n  cardModel = new ResponseCardGameView;\n  stopModel = new RequestStopGameView;\n  stopGameModel = new ResponseStopGameView;\n  winnerModel = new ResponseWinnerGameView;\n  constructor(private router: Router, private accountService: AccountService,\n  private gameService: GameService) { }\n\n  ngOnInit() {\n    this.getUserData();\n  }\n\n  onStopGame(){\n    this.isStop = true;\n    this.stopModel.userId = this.userModel.userId;\n    this.stopModel.gameId = this.gameModel.gameId;\n    this.gameService.stop(this.stopModel)    \n    .subscribe((response) => {\n      this.stopGameModel = response\n      this.gameModel.bots = this.stopGameModel.bots;\n      this.gameModel.cardsleft = this.stopGameModel.cardsleft\n      this.gameModel.user = this.stopGameModel.user;\n      this.winnerModel = this.stopGameModel.winner;\n    });\n  }\n\n  onAddCard() {\n    this.getCardModel.gameId = this.gameModel.gameId;\n    this.getCardModel.userId = this.userModel.userId;\n    this.gameService.getCard(this.getCardModel)\n    .subscribe((response) => {\n      this.cardModel = response\n      this.gameModel.user.cards.push(this.cardModel);\n      this.gameModel.user.score += this.cardModel.value;\n      if (this.gameModel.user.score > 21){\n        this.onStopGame();\n      }\n    });\n  }\n\n  onStart() {\n    this.isStop = false;\n    this.startGameModel.userId = this.userModel.userId;\n    this.gameService.start(this.startGameModel)\n      .subscribe((response) => {\n        this.gameModel = response;\n      });\n    this.getUserData();\n    this.isNewGame = true;\n  }\n\n  getUserData() {\n    var userId = this.getUserId()\n    this.accountService.get(userId)\n      .subscribe((response) => {\n        this.userModel = response;\n      });\n  }\n\n  getUserId() {\n    var token = localStorage.getItem('token');\n    var tokenClaims = jwt_decode(token, \"\");\n    return tokenClaims.UserId;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { GameRoutingModule } from './game-routing.module';\nimport { GameComponent } from './game.component';\n\n@NgModule({\n  declarations: [\n    GameComponent\n  ],\n  imports: [\n    CommonModule,\n    GameRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class GameModule { }\n","export class RequestGetCardGameView {\n    userId: string;\n    gameId: string;\n}\n","export class RequestStartGameView {\n    userId: string;\n    countBots: number;\n}\n","export class RequestStopGameView {\n    userId: string;\n    gameId: string;\n}\n","export class ResponseCardGameView {\n    ranks: string;\n    suit: string;\n    value: number\n}\n","import { PlayerGameView } from './playerGameView';\n\nexport class ResponseStartGameView {\n    gameId: string;\n    bots: Array<PlayerGameView>;\n    user: PlayerGameView;\n    cardsleft: number;\n}\n","import { PlayerGameView } from './playerGameView';\nimport { ResponseWinnerGameView } from './responseWinnerGameView';\n\nexport class ResponseStopGameView {\n    gameId: string;\n    bots: Array<PlayerGameView>;\n    user: PlayerGameView;\n    cardsleft: number;\n    winner: ResponseWinnerGameView;\n}\n","import { WinnerModel } from \"./winnerModel\";\n\nexport class ResponseWinnerGameView {\n    winner: Array<WinnerModel>;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RequestStartGameView } from '../models/Game/requestStartGameView';\nimport { RequestGetCardGameView } from '../models/Game/requestGetCardGameView';\nimport { ResponseStartGameView } from '../models/Game/responseStartGameView';\nimport { ResponseCardGameView } from '../models/Game/responseCardGameView';\nimport { RequestStopGameView } from '../models/Game/requestStopGameView';\nimport { ResponseStopGameView } from '../models/Game/responseStopGameView';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n  readonly rootUrl = environment.apiUrl;\n\n  response:any;\n  constructor(private http:HttpClient) { }\n\n  start(model : RequestStartGameView){\n    return this.http.post<ResponseStartGameView>(this.rootUrl + 'Game/StartGame', model);\n  }\n\n  getCard(model : RequestGetCardGameView){\n    return this.http.post<ResponseCardGameView>(this.rootUrl + 'Game/GetCard', model);\n  }\n\n  stop(model : RequestStopGameView){\n    return this.http.post<ResponseStopGameView>(this.rootUrl + 'Game/Stop', model);\n  }\n}\n"],"sourceRoot":""}