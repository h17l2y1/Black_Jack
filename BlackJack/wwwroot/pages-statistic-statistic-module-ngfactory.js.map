{"version":3,"sources":["webpack:///./src/app/pages/statistic/statistic-routing.module.ts","webpack:///./src/app/pages/statistic/statistic.component.html","webpack:///./src/app/pages/statistic/statistic.component.ts","webpack:///./src/app/pages/statistic/statistic.module.ts","webpack:///./src/shared/models/Statistic/RequestGetGameStatisticView.ts","webpack:///./src/shared/models/Statistic/ResponseGetGameStatisticView.ts","webpack:///./src/shared/models/Statistic/ResponsePaginationStatisticView.ts","webpack:///./src/shared/services/statistic.service.ts"],"names":[],"mappings":"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","file":"pages-statistic-statistic-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StatisticComponent } from './statistic.component';\n\nconst routes: Routes = [\n  { path: '', component: StatisticComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StatisticRoutingModule { }\n","<br><br><br>\n  <button class=\"btn btn-primary\" (click)=\"onBack()\">Back</button>\n<br>\n\n<!-- Game -->\n<div class=\"gameStat\" *ngIf=\"isGame\">\n  <div class=\"gameProp\">GameId: {{gameRes.gameId}}</div>\n  <div class=\"gameProp\">Cardleft: {{gameRes.cardsleft}}</div>\n  <div class=\"gameProp\" id=\"pl\"> User\n    <div class=\"playerProp\">Name: {{gameRes.user.name}}</div>\n    <div class=\"playerProp\">Score: {{gameRes.user.score}}</div>\n      <div class=\"playerProp\">\n        <div class=\"cards\"  *ngFor=\"let card of gameRes.user.cards\">\n            <div class=\"card\">\n                <div class=\"cardProp\">{{card.ranks}}</div>\n                <div class=\"cardProp\">{{card.suit}}</div>\n                <div class=\"cardProp\">{{card.value}}</div>\n            </div>\n        </div>\n      </div><br>\n    <div class=\"gameProp\" id=\"pl\"> Bots\n      <div class=\"bot\" *ngFor=\"let bot of gameRes.bots\">\n          <div class=\"playerProp\">Name: {{bot.name}}</div>\n          <div class=\"playerProp\">Score: {{bot.score}}</div>\n          <div class=\"playerProp\">\n            <div class=\"cards\" *ngFor=\"let card of bot.cards\">\n                <div class=\"card\">\n                    <div class=\"cardProp\">{{card.ranks}}</div>\n                    <div class=\"cardProp\">{{card.suit}}</div>\n                    <div class=\"cardProp\">{{card.value}}</div>\n                </div>\n            </div>\n          </div><br>\n      </div>\n    </div>\n\n  </div>\n  <div class=\"gameProp\" *ngFor=\"let item of gameRes.winner\">\n    Winner: {{item.name}}\n  </div>\n</div>\n\n<select [(ngModel)]=\"totalPage.size\" [(ngModel)]=\"userPage.size\" (change)=\"onFirst()\">\n  <option>3</option>\n  <option>5</option>\n  <option>10</option>\n</select>\n<br><br>\n<div class=\"input-group mb-3\">\n  <div class=\"input-group-prepend\">\n    <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n  </div>\n  <input [(ngModel)]=\"userPage.userName\" (ngModelChange)=\"statistic()\" type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n</div>\n\n<table class=\"table\">  \n  <thead>  \n    <tr>  \n        <th>UserName</th>  \n        <th>Winner</th>  \n        <th>Score</th>  \n        <th>GameId</th>\n    </tr>  \n  </thead>  \n  <tbody>\n    <tr *ngFor=\"let item of newPage.page\" (click)=\"onGame(item.gameId)\">  \n      <td>{{item.userName}}</td>  \n      <td>{{item.winner}}</td>  \n      <td>{{item.score}}</td>  \n      <td>{{item.gameId}}</td>  \n    </tr>  \n  </tbody>\n</table>\n\n<div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n    <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\n      <button (click)=\"onFirst()\" class=\"btn btn-secondary\">First</button>\n      <button [disabled]=\"!isPrevious\" (click)=\"onStatPrevious()\"  class=\"btn btn-secondary\"><</button>\n      <button [disabled]=\"!isPrevious\" (click)=\"onStatPrevious()\"  class=\"btn btn-secondary\">{{newPage.pageNumber -1}}</button>\n      <button class=\"btn btn-secondary\">{{newPage.pageNumber}}</button>\n      <button [disabled]=\"!isNext\" (click)=\"onStatNext()\"  class=\"btn btn-secondary\">{{newPage.pageNumber +1}}</button>\n      <button [disabled]=\"!isNext\" (click)=\"onStatNext()\" class=\"btn btn-secondary\">></button>\n      <button  (click)=\"onLast()\"  class=\"btn btn-secondary\">Last</button>\n    </div>\n  </div>\n\n\n<!-- \n<form [formGroup]=\"statisticForm\" (change)=\"statistic()\">\n    <select formControlName=\"Size\" >\n        <option>3</option>\n        <option>5</option>\n        <option>10</option>\n      </select>\n      <br><br>\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n        </div>\n        <input formControlName=\"Name\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n      </div>\n      \n      <table class=\"table\">  \n        <thead>  \n          <tr>  \n              <th>UserName</th>  \n              <th>Winner</th>  \n              <th>Score</th>  \n              <th>GameId</th>\n          </tr>  \n        </thead>  \n        <tbody>\n          <tr *ngFor=\"let item of newPage.page\" (click)=\"onGame(item.gameId)\">  \n            <td>{{item.userName}}</td>  \n            <td>{{item.winner}}</td>  \n            <td>{{item.score}}</td>  \n            <td>{{item.gameId}}</td>  \n          </tr>  \n        </tbody>\n      </table>\n      \n      <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n          <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\n            <button formControlName=\"First\" (click)=\"onFirst()\" class=\"btn btn-secondary\">First</button>\n            <button formControlName=\"Previous\" (click)=\"onStatPrevious()\"  class=\"btn btn-secondary\"><</button>\n            <button (click)=\"onStatPrevious()\" class=\"btn btn-secondary\">{{newPage.pageNumber -1}}</button>\n            <button class=\"btn btn-secondary\">{{newPage.pageNumber}}</button>\n            <button (click)=\"onStatNext()\" class=\"btn btn-secondary\">{{newPage.pageNumber +1}}</button>\n            <button formControlName=\"Next\" (click)=\"onStatNext()\" class=\"btn btn-secondary\">></button>\n            <button formControlName=\"Last\" (click)=\"onLast()\"  class=\"btn btn-secondary\">Last</button>\n          </div>\n        </div>\n</form> -->","import { Component, OnInit } from '@angular/core';\nimport { StatisticService } from '../../../shared/services/statistic.service';\nimport { Router } from '@angular/router';\nimport * as jwt_decode from \"jwt-decode\";\nimport { ResponseGetGameStatisticView } from '../../../shared/models/Statistic/ResponseGetGameStatisticView';\nimport { RequestGetGameStatisticView } from '../../../shared/models/Statistic/RequestGetGameStatisticView';\nimport { ResponsePaginationStatisticView } from '../../../shared/models/Statistic/ResponsePaginationStatisticView';\nimport { RequestPaginationStatisticView } from '../../../shared/models/Statistic/RequestPaginationStatisticView';\nimport { RequestGetUserStatStatisticView } from '../../../shared/models/Statistic/RequestGetUserStatStatisticView';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-statistic',\n  templateUrl: './statistic.component.html',\n  styleUrls: ['./statistic.component.css']\n})\nexport class StatisticComponent implements OnInit {\n  \n  totalPage : RequestPaginationStatisticView = { page: 1, size: 3 };\n  userPage : RequestGetUserStatStatisticView = { page: 1, size: 3, userName: null };\n  public newPage = new ResponsePaginationStatisticView;\n  gameReq = new RequestGetGameStatisticView;\n  gameRes = new ResponseGetGameStatisticView; \n  userId: string = null;\n  gameId: string = null;\n  isGame: boolean = false;\n  isNext: boolean = true;\n  isPrevious: boolean = true;\n  isUser: boolean = false;\n  statisticForm: FormGroup;\n  constructor(private router: Router, private service: StatisticService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.statistic();\n  }\n\n  statistic(){\n    if (this.userPage.userName == \"\" || this.userPage.userName == null) {\n      return this.totalStat();\n    }\n    this.userStat();\n  }\n\n  onFirst(){\n    this.totalPage.page = 1;\n    this.userPage.page = 1;\n    this.statistic();\n  }\n\n  onLast(){\n    this.totalPage.page = this.newPage.totalPages;\n    this.userPage.page = this.newPage.totalPages;\n    this.statistic();\n  }\n\n  onStatNext(){\n    this.totalPage.page += 1;\n    this.userPage.page += 1;\n    this.statistic();\n  }\n\n  onStatPrevious(){\n    this.totalPage.page -= 1;\n    this.userPage.page -= 1;\n    this.statistic();\n  }\n\n  checker(){\n    if(this.totalPage.page == this.newPage.totalPages){\n      this.isNext = false;\n    }\n    if(this.totalPage.page < this.newPage.totalPages){\n      this.isNext = true;\n    }\n    if(this.totalPage.page == 1){\n      this.isPrevious = false;\n    }\n    if(this.totalPage.page > 1){\n      this.isPrevious = true;\n    }\n  }\n\n  userStat(){\n    this.checker();\n    this.service.getUserPage(this.userPage)\n    .subscribe(\n      data =>  {\n        console.log(data);\n        this.newPage = data\n      },\n      error => {\n        if(error.status == 500){\n          console.log(\"User Not Found\");\n          this.totalStat();\n        }\n      }   \n    );\n  }\n\n  totalStat(){\n    this.checker();\n    this.service.getPage(this.totalPage)\n    .subscribe((response) => {\n      this.newPage = response\n    })\n  }\n\n  onGame(gameId:string){\n    console.log(gameId);\n    this.isGame = true;\n    this.gameReq.gameId = gameId;\n    this.gameReq.playerId = this.userId;\n    this.service.getGame(this.gameReq)\n    .subscribe((response) => {\n      this.gameRes = response\n    })\n  }\n\n  onBack(){\n    this.router.navigateByUrl('choose');\n  }\n\n}\n\n\n\n\n\n\n\n\n\n// ngOnInit() {\n//   this.initForm();\n//   this.statistic();\n// }\n\n  // initForm(){\n  //   this.statisticForm = this.fb.group({\n  //     Page: 1,\n  //     Size: 3,\n  //     Name: [null],\n  //     First: [],\n  //     Previous: 0,\n  //     Next: 0,\n  //     Last: 0\n  //   });\n  // }\n\n  // onSelect(){\n  //   this.userPage = this.statisticForm.value.Name\n  //   console.log(this.userPage);\n  // }\n\n\n\n\n\n\n  // statistic(){\n  //   if (this.statisticForm.value.Name == \"\" || this.statisticForm.value.Name == null) {\n  //     return this.totalStat();\n  //   }\n  //   this.userStat();\n  // }\n\n  // onFirst(){\n  //   this.totalPage.page = 1;\n  //   this.userPage.page = 1;\n  //   this.statistic();\n  // }\n\n  // onLast(){\n  //   this.totalPage.page = this.newPage.totalPages;\n  //   this.userPage.page = this.newPage.totalPages;\n  //   this.statistic();\n  // }\n\n  // onStatNext(){\n  //   this.totalPage.page += 1;\n  //   this.userPage.page += 1;\n  //   this.statistic();\n  // }\n\n  // onStatPrevious(){\n  //   this.totalPage.page -= 1;\n  //   this.userPage.page -= 1;\n  //   this.statistic();\n  // }\n\n  // checker(){\n  //   if(this.totalPage.page == this.newPage.totalPages){\n  //     this.isNext = false;\n  //   }\n  //   if(this.totalPage.page < this.newPage.totalPages){\n  //     this.isNext = true;\n  //   }\n  //   if(this.totalPage.page == 1){\n  //     this.isPrevious = false;\n  //   }\n  //   if(this.totalPage.page > 1){\n  //     this.isPrevious = true;\n  //   }\n  // }\n\n  // userStat(){\n  //   this.checker();\n  //   this.service.getUserPage(this.userPage)\n  //   .subscribe(\n  //     data =>  {\n  //       console.log(data);\n  //       this.newPage = data\n  //     },\n  //     error => {\n  //       if(error.status == 500){\n  //         console.log(\"User Not Found\");\n  //         this.totalStat();\n  //       }\n  //     }   \n  //   );\n  // }\n\n  // totalStat(){\n  //   this.checker();\n  //   this.service.getPage(this.totalPage)\n  //   .subscribe((response) => {\n  //     this.newPage = response\n  //   })\n  // }\n\n  // onGame(gameId:string){\n  //   console.log(gameId);\n  //   this.isGame = true;\n  //   this.gameReq.gameId = gameId;\n  //   this.gameReq.playerId = this.userId;\n  //   this.service.getGame(this.gameReq)\n  //   .subscribe((response) => {\n  //     this.gameRes = response\n  //   })\n  // }\n\n  // onBack(){\n  //   this.router.navigateByUrl('choose');\n  // }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StatisticRoutingModule } from './statistic-routing.module';\nimport { StatisticComponent } from './statistic.component';\n\n@NgModule({\n  declarations: [\n    StatisticComponent\n  ],\n  imports: [\n    CommonModule,\n    StatisticRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class StatisticModule { }\n","export class RequestGetGameStatisticView {\n    gameId:string;\n    playerId:string;\n}\n","import { PlayerStatisticView } from './PlayerStatisticView';\n\nimport { ResponseWinnerGameView } from '../Game/ResponseWinnerGameView';\n\nexport class ResponseGetGameStatisticView {\n    gameId: string;\n    bots: Array<PlayerStatisticView>;\n    user: PlayerStatisticView;\n    cardsleft: number;\n    winner: ResponseWinnerGameView;\n}\n","import { StatisticStatisticView } from \"./StatisticStatisticView\";\n\nexport class ResponsePaginationStatisticView {\n    page: Array<StatisticStatisticView>;\n    pageNumber: number;\n    itemsOnPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ResponseGetGameStatisticView } from '../models/Statistic/ResponseGetGameStatisticView';\nimport { RequestGetGameStatisticView } from '../models/Statistic/RequestGetGameStatisticView';\nimport { RequestPaginationStatisticView } from '../models/Statistic/RequestPaginationStatisticView';\nimport { ResponsePaginationStatisticView } from '../models/Statistic/ResponsePaginationStatisticView';\nimport { RequestGetUserStatStatisticView } from '../models/Statistic/RequestGetUserStatStatisticView';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatisticService {\n\n  readonly rootUrl = \"http://localhost:52077/\";\n\n  constructor(private http:HttpClient) { }\n\n  getGame(model : RequestGetGameStatisticView){\n    return this.http.post<ResponseGetGameStatisticView>(this.rootUrl + 'api/Statistic/GetGame', model);\n  }\n\n  getPage(model: RequestPaginationStatisticView){\n    return this.http.post<ResponsePaginationStatisticView>(this.rootUrl + 'api/Statistic/Pagination', model);\n  }\n\n  getUserPage(model: RequestGetUserStatStatisticView){\n    return this.http.post<ResponsePaginationStatisticView>(this.rootUrl + 'api/Statistic/GetUserStat', model);\n  }\n\n}\n"],"sourceRoot":""}