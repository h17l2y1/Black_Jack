{"version":3,"sources":["webpack:///./src/shared/models/Account/responseSignUpAccountView.ts","webpack:///./src/shared/services/transfer.service.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;IAAA;IAKA,CAAC;IAAD,gCAAC;AAAD,CAAC;AALY,8DAAyB;;;;;;;;;;;;;;;;;;;;;;;;ACAtC,oGAAyD;AACzD,qKAAwF;AAKxF;IAKE;QAHA,cAAS,GAAG,IAAI,qDAAyB,CAAC;QAIxC,IAAI,CAAC,WAAW,GAAG,IAAI,mBAAY,EAAE,CAAC;IACxC,CAAC;IAEM,kCAAQ,GAAf;QACE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,kCAAQ,GAAf,UAAgB,KAAgC;QAC9C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAhBU,eAAe;QAH3B,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CAmB3B;IAAD,sBAAC;CAAA;AAnBY,0CAAe","file":"common.js","sourcesContent":["export class ResponseSignUpAccountView {\r\n    userId: string;\r\n    userName: string;\r\n    points: string;\r\n    role: string;\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { ResponseSignUpAccountView } from '../models/Account/responseSignUpAccountView';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransferService {\n\n  userModel = new ResponseSignUpAccountView;\n  public modelAdded$: EventEmitter<ResponseSignUpAccountView>;\n\n  constructor() { \n    this.modelAdded$ = new EventEmitter(); \n  }\n\n  public getModel(): ResponseSignUpAccountView {\n    return this.userModel;\n  }\n\n  public setModel(model: ResponseSignUpAccountView): void {\n    this.userModel = model;\n    this.modelAdded$.emit(model);\n  }\n\n\n}\n"],"sourceRoot":""}