// <auto-generated />
using System;
using BlackJackDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlackJackDataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190503110948_4")]
    partial class _4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlackJackEntities.Entities.Card", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("Rank");

                    b.Property<int>("Suit");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new { Id = "a4c192d6-b0de-4423-83dc-eb63a4e06411", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 2, Suit = 0, Value = 2 },
                        new { Id = "e7b0295e-c795-4bc4-936c-949e597eeaaa", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 3, Suit = 0, Value = 3 },
                        new { Id = "7315df62-eb0e-499f-9273-ce289b6889f1", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 4, Suit = 0, Value = 4 },
                        new { Id = "8e481833-6bfe-4d3f-ade2-e2682f486ded", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 5, Suit = 0, Value = 5 },
                        new { Id = "842d5ebc-f5f1-4a1c-b5c1-0eefa6715e6a", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 6, Suit = 0, Value = 6 },
                        new { Id = "5fd9da8b-131f-4185-80b6-a5da21a35706", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 7, Suit = 0, Value = 7 },
                        new { Id = "6fbfe63d-ac9e-4313-8e60-c31ad032fecc", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 8, Suit = 0, Value = 8 },
                        new { Id = "e8b9dfd9-83da-4a1a-b720-f11e1e0b93c9", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 9, Suit = 0, Value = 9 },
                        new { Id = "99f48b8d-e96a-4410-830c-e6cee5036a1a", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 10, Suit = 0, Value = 10 },
                        new { Id = "07401364-d463-4bca-9b2b-59ff6d935bdc", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 11, Suit = 0, Value = 10 },
                        new { Id = "3685a208-039c-4dec-9c96-0cc2187a98a5", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 12, Suit = 0, Value = 10 },
                        new { Id = "19b92e6c-1f67-4472-8e3c-da0ee9c716ce", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 13, Suit = 0, Value = 10 },
                        new { Id = "65d28502-e792-4975-b9c3-f99e06d4f213", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 14, Suit = 0, Value = 11 },
                        new { Id = "e3034d9c-3054-49ac-9770-81235aafec3e", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 2, Suit = 1, Value = 2 },
                        new { Id = "d476bb4d-76f3-49a2-8052-19d55fe2288c", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 3, Suit = 1, Value = 3 },
                        new { Id = "2356316a-13a3-46e8-8d68-b24a3dc9e7b0", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 4, Suit = 1, Value = 4 },
                        new { Id = "487c3f45-2f35-444b-9dc5-c5137a849696", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 5, Suit = 1, Value = 5 },
                        new { Id = "16bb2e5f-78c1-4aad-9fd7-c11a0de61a06", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 6, Suit = 1, Value = 6 },
                        new { Id = "a5249abe-182f-475e-b168-86ccbb5d042b", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 7, Suit = 1, Value = 7 },
                        new { Id = "6b21f171-278a-4722-b83d-a252e81a4c94", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 8, Suit = 1, Value = 8 },
                        new { Id = "973f2d29-d048-4c0e-b640-e54d1ef06395", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 9, Suit = 1, Value = 9 },
                        new { Id = "a62fcded-4006-460a-89b4-e7d2df31f20f", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 10, Suit = 1, Value = 10 },
                        new { Id = "2e53c03c-9079-4e36-9843-be0d6c5b6d05", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 11, Suit = 1, Value = 10 },
                        new { Id = "22bd67d0-560d-45b3-bccd-8157264a5b0d", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 12, Suit = 1, Value = 10 },
                        new { Id = "3c54138d-10ba-45fd-8820-3045cc9f1442", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 13, Suit = 1, Value = 10 },
                        new { Id = "ced1fb38-e1d3-47a3-bca9-c851beb5f9dc", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 14, Suit = 1, Value = 11 },
                        new { Id = "9f0fe991-d500-4dae-b5fb-9fd688d21b19", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 2, Suit = 2, Value = 2 },
                        new { Id = "36965bc9-aaec-4d5e-aa1c-7cc6324de848", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 3, Suit = 2, Value = 3 },
                        new { Id = "e81270f9-f68f-4087-bf39-c6f6954586ab", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 4, Suit = 2, Value = 4 },
                        new { Id = "ff4db707-e0b2-406b-a495-1468295dcc69", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 5, Suit = 2, Value = 5 },
                        new { Id = "c5461301-7df8-4322-b746-342659e2a326", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 6, Suit = 2, Value = 6 },
                        new { Id = "1f137cf3-7479-449a-b81a-695f9aa11d7a", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 7, Suit = 2, Value = 7 },
                        new { Id = "0294bb7b-40a8-4abd-8503-71ddf98a9524", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 8, Suit = 2, Value = 8 },
                        new { Id = "46ff0db0-aaa6-440a-bfcb-a5015de7ad8c", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 9, Suit = 2, Value = 9 },
                        new { Id = "f052adec-3d8d-4cb5-85b6-8b794e5d7b1c", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 10, Suit = 2, Value = 10 },
                        new { Id = "1db6dded-5f90-437b-a950-fa99b8fa78e7", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 11, Suit = 2, Value = 10 },
                        new { Id = "7788f1ad-8b54-4e33-8ba4-26644f18623b", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 12, Suit = 2, Value = 10 },
                        new { Id = "a53ab068-92be-48a0-b1ac-ac234b127dde", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 13, Suit = 2, Value = 10 },
                        new { Id = "c077f299-50c4-4244-a038-6d8b2085f907", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 14, Suit = 2, Value = 11 },
                        new { Id = "63e0c30d-fc93-49e0-ab8c-ac04af3f1de7", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 2, Suit = 3, Value = 2 },
                        new { Id = "d8059eae-aa86-4fd5-8e75-5c43809477f5", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 3, Suit = 3, Value = 3 },
                        new { Id = "7e05b32f-b455-4ca2-b119-1db56b1b3648", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 4, Suit = 3, Value = 4 },
                        new { Id = "69f1a812-390b-47c6-9ecf-79c7da0ae393", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 5, Suit = 3, Value = 5 },
                        new { Id = "05b989ad-2255-4e3a-8cfe-a66cf001a1fb", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 6, Suit = 3, Value = 6 },
                        new { Id = "72ed587e-6757-4458-8f69-fc2876dfab18", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 7, Suit = 3, Value = 7 },
                        new { Id = "769aafdc-c3ff-4c25-9910-bf6c1b952464", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 8, Suit = 3, Value = 8 },
                        new { Id = "ee180885-9d44-4500-87ca-fd28f2cb7f0c", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 9, Suit = 3, Value = 9 },
                        new { Id = "03b3f160-3cf1-4036-9df1-864259768549", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 10, Suit = 3, Value = 10 },
                        new { Id = "cfa1734f-3e99-4829-895b-c69e2f2d85c1", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 11, Suit = 3, Value = 10 },
                        new { Id = "390bf1ce-eac3-4451-a5f6-acad3c6cb360", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 12, Suit = 3, Value = 10 },
                        new { Id = "cadcef8f-75b7-4466-b5cb-822299f77f2a", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 13, Suit = 3, Value = 10 },
                        new { Id = "106ba086-f9ba-4349-a348-1ecfe017a136", CreationDate = new DateTime(2019, 5, 3, 11, 9, 48, 347, DateTimeKind.Utc), Rank = 14, Suit = 3, Value = 11 }
                    );
                });

            modelBuilder.Entity("BlackJackEntities.Entities.CardMove", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardId");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("GameId");

                    b.Property<int>("Move");

                    b.Property<string>("Name");

                    b.Property<string>("PlayerId");

                    b.Property<string>("Role");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("CardMoves");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.Game", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.GameUsers", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("GameId");

                    b.Property<string>("UserId");

                    b.Property<bool>("Winner");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("GameUsers");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.Player", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("GameId");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<int>("Points");

                    b.Property<string>("Role");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new { Id = "902b4491-3125-4582-b44b-21c40b20d119", AccessFailedCount = 0, ConcurrencyStamp = "07902417-3781-405d-9d6b-4ffd0bdfac18", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Dialer", TwoFactorEnabled = false, UserName = "Dialer" },
                        new { Id = "4e4ad55c-113e-4d6f-93ba-444546fc2f0e", AccessFailedCount = 0, ConcurrencyStamp = "a2399833-97c3-46fc-9819-35df997f0174", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot_1" },
                        new { Id = "5ce94ddd-e8a9-4429-bd90-4beb1b1251b8", AccessFailedCount = 0, ConcurrencyStamp = "6f4ad332-b0dc-4c3f-b6fd-fcb48b89083a", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot_2" },
                        new { Id = "c79b07a7-fdb3-4be7-89b6-3c41bf784496", AccessFailedCount = 0, ConcurrencyStamp = "c8e7252c-6c27-443b-a9e4-c4a499ba2465", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot_3" },
                        new { Id = "a0a62938-90ad-4f50-ac00-3239c1922c1f", AccessFailedCount = 0, ConcurrencyStamp = "67ed0d13-48ee-489c-93a5-d8a33ced2dcc", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot_4" },
                        new { Id = "61ff1e4f-c2e1-445f-a73d-202faa0a63b3", AccessFailedCount = 0, ConcurrencyStamp = "3357c1a8-2b6c-41eb-ac52-b15a051a5a13", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot_5" }
                    );
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.CardMove", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Game")
                        .WithMany("CardMoves")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.GameUsers", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Game", "Game")
                        .WithMany("GameUsers")
                        .HasForeignKey("GameId");

                    b.HasOne("BlackJackEntities.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.Player", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
