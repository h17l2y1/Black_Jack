// <auto-generated />
using System;
using BlackJackDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlackJackDataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190401123519_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlackJackEntities.Entities.Card", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("Rank");

                    b.Property<int>("Suit");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new { Id = "00fec9d7-650d-4b28-8c9f-25c13c29bb11", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 2, Suit = 0, Value = 2 },
                        new { Id = "1ac7cf10-2fce-4167-87b7-15a1f69e03ac", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 3, Suit = 0, Value = 3 },
                        new { Id = "f71a175a-0808-44ad-b64b-4d69b23c262e", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 4, Suit = 0, Value = 4 },
                        new { Id = "a530c481-d0e8-4cf9-86f6-69ec3bc06c3b", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 5, Suit = 0, Value = 5 },
                        new { Id = "a482637c-c66b-46f0-85a7-f32b39858c82", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 6, Suit = 0, Value = 6 },
                        new { Id = "9b72abe7-3f1d-4fa0-9ed5-5861e9e1a2f1", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 7, Suit = 0, Value = 7 },
                        new { Id = "c5d78bb2-928e-472c-9a9c-100e36071fef", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 8, Suit = 0, Value = 8 },
                        new { Id = "cff6d688-e21c-46a5-a81e-710fac77a198", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 9, Suit = 0, Value = 9 },
                        new { Id = "266b61fe-b987-489a-a65d-4c2e1412c139", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 10, Suit = 0, Value = 10 },
                        new { Id = "eb990f88-cf7f-4208-9cb2-a5cb2200a85e", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 11, Suit = 0, Value = 10 },
                        new { Id = "bf281824-4ec4-455b-99d9-5bd01f167c13", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 12, Suit = 0, Value = 10 },
                        new { Id = "5ff6f056-34be-4b57-8fcb-d68f474db9c0", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 13, Suit = 0, Value = 10 },
                        new { Id = "2ed54698-dcc4-4532-9a42-429c13154287", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 14, Suit = 0, Value = 11 },
                        new { Id = "096593ae-7ff6-4d42-8576-4d537bd3c7cd", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 2, Suit = 1, Value = 2 },
                        new { Id = "62fee82f-3280-437b-af69-64ff9862fdbd", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 3, Suit = 1, Value = 3 },
                        new { Id = "df08f8a5-ee29-409a-adb1-fbd5512af921", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 4, Suit = 1, Value = 4 },
                        new { Id = "00b28b48-c9fb-4aa4-8cae-3cb776c46958", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 5, Suit = 1, Value = 5 },
                        new { Id = "9754d037-8943-4f0f-bb02-14f1538cbcc1", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 6, Suit = 1, Value = 6 },
                        new { Id = "adf28741-7e7b-4ffc-a69c-02a54980735a", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 7, Suit = 1, Value = 7 },
                        new { Id = "43f2b9dd-a784-4c10-aa2c-29a00238d90b", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 8, Suit = 1, Value = 8 },
                        new { Id = "80c6bb6a-dfa4-4506-8014-6a26fe640165", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 9, Suit = 1, Value = 9 },
                        new { Id = "05ef0f60-88a6-48b1-9323-a0775821c86b", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 10, Suit = 1, Value = 10 },
                        new { Id = "2efc2e1b-8f32-4962-9a85-1c1333c18259", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 11, Suit = 1, Value = 10 },
                        new { Id = "921eaacf-b43f-458e-b186-e90c169e1d06", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 12, Suit = 1, Value = 10 },
                        new { Id = "04e5d3d5-e357-4d01-a00b-364e9324324e", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 13, Suit = 1, Value = 10 },
                        new { Id = "c5e0b681-ba27-4cb2-812a-37cf09060334", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 14, Suit = 1, Value = 11 },
                        new { Id = "2cf4afcf-eb14-4835-8ca6-563615095382", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 2, Suit = 2, Value = 2 },
                        new { Id = "55d50116-6cb9-4da0-b2bc-4dd74de0bece", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 3, Suit = 2, Value = 3 },
                        new { Id = "60f3f51d-6f06-4eda-a562-2f9d99825e7e", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 4, Suit = 2, Value = 4 },
                        new { Id = "777d985c-6bc2-42ce-913b-93f4cb4c1d56", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 5, Suit = 2, Value = 5 },
                        new { Id = "629af487-b852-4db6-85b2-c63c774a46a4", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 6, Suit = 2, Value = 6 },
                        new { Id = "f13698c2-8b34-4865-bbc1-19ae1e00f77c", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 7, Suit = 2, Value = 7 },
                        new { Id = "73fca3e7-778b-463c-98dd-fd468120f01a", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 8, Suit = 2, Value = 8 },
                        new { Id = "feed5340-3cea-4455-bd00-a6396ee40129", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 9, Suit = 2, Value = 9 },
                        new { Id = "5f1717c6-d6ce-4058-b176-b4ea08a1e8fb", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 10, Suit = 2, Value = 10 },
                        new { Id = "46133abf-5347-4aa2-8162-630b32ce9de1", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 11, Suit = 2, Value = 10 },
                        new { Id = "7b4e8dd7-c761-43dd-b52f-7f250907acc5", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 12, Suit = 2, Value = 10 },
                        new { Id = "aed63978-706d-4a93-8bbe-cc7bf4495862", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 13, Suit = 2, Value = 10 },
                        new { Id = "6b061caa-c8b3-4b67-9145-aa19897378ee", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 14, Suit = 2, Value = 11 },
                        new { Id = "de258540-b7cc-4afa-a9a9-e964ae5d84d6", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 2, Suit = 3, Value = 2 },
                        new { Id = "ae875804-bd08-4775-a826-fdff15f428e1", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 3, Suit = 3, Value = 3 },
                        new { Id = "d2ff0e91-95c1-4824-9b2a-dd80a358c808", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 4, Suit = 3, Value = 4 },
                        new { Id = "16229aa7-a319-4beb-a38e-002aec2a4d87", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 5, Suit = 3, Value = 5 },
                        new { Id = "958041b8-ac21-4c33-aa47-44818aa224ff", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 6, Suit = 3, Value = 6 },
                        new { Id = "bbb9734d-80e9-429b-b3c4-d48de1cb4332", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 7, Suit = 3, Value = 7 },
                        new { Id = "d7d56216-37ba-41cc-8f01-477eb4cb7101", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 8, Suit = 3, Value = 8 },
                        new { Id = "b9130192-0b8b-4dcd-8498-ab1260d84733", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 9, Suit = 3, Value = 9 },
                        new { Id = "3bb6d221-89a5-4bc3-b86b-1f78a64839a4", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 10, Suit = 3, Value = 10 },
                        new { Id = "3c0a6307-aa0f-4547-9e6b-6b512032e47c", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 11, Suit = 3, Value = 10 },
                        new { Id = "3d11e0a1-731b-4ae0-b1d7-56438cecdd0d", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 12, Suit = 3, Value = 10 },
                        new { Id = "9b88941e-90f9-4ac5-95c1-d16ea514cc79", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 13, Suit = 3, Value = 10 },
                        new { Id = "f336c82f-b499-438e-b967-6ce77083fd62", CreationDate = new DateTime(2019, 4, 1, 12, 35, 18, 911, DateTimeKind.Utc), Rank = 14, Suit = 3, Value = 11 }
                    );
                });

            modelBuilder.Entity("BlackJackEntities.Entities.CardMove", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardId");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("GameId");

                    b.Property<int>("Move");

                    b.Property<string>("Name");

                    b.Property<string>("PlayerId");

                    b.Property<string>("Role");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("GameId");

                    b.ToTable("CardMoves");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.Game", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.GameUsers", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("GameId");

                    b.Property<string>("UserId");

                    b.Property<bool>("Winner");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("GameUsers");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.Player", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<int>("Points");

                    b.Property<string>("Role");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new { Id = "7a2f4530-f3bd-4190-b776-2bdb58df67c5", AccessFailedCount = 0, ConcurrencyStamp = "ce6a78be-04bb-4174-8203-27967a9f5f25", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Dialer" },
                        new { Id = "60044d67-88a2-4282-8332-29e042ab467c", AccessFailedCount = 0, ConcurrencyStamp = "67c1aa41-47e2-41ab-998a-7d5cb4ae3940", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot 1" },
                        new { Id = "31d26926-2f9f-4df2-a131-d0d562484c50", AccessFailedCount = 0, ConcurrencyStamp = "01ced07d-9bbc-44fc-bb91-9a7195bea3c5", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot 2" },
                        new { Id = "0fcfdde2-41c5-437c-80e1-9a2d71805d7c", AccessFailedCount = 0, ConcurrencyStamp = "0b5fa3ce-5849-445c-ab83-0f630ad5df11", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot 3" },
                        new { Id = "0b16a8e6-30fb-405a-8f2b-3e383cab19fb", AccessFailedCount = 0, ConcurrencyStamp = "0b3e0929-2c29-4084-95a5-aeb1fef146fd", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot 4" },
                        new { Id = "22890db1-b202-4260-948f-e4ac42317fa3", AccessFailedCount = 0, ConcurrencyStamp = "0a528eb4-56b4-4b28-a77e-4b2090192531", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot 5" }
                    );
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.CardMove", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId");

                    b.HasOne("BlackJackEntities.Entities.Game", "Game")
                        .WithMany("CardMoves")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.GameUsers", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.HasOne("BlackJackEntities.Entities.Player", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
