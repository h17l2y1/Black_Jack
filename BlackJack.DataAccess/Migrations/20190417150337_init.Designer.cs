// <auto-generated />
using System;
using BlackJackDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlackJackDataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190417150337_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlackJackEntities.Entities.Card", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("Rank");

                    b.Property<int>("Suit");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new { Id = "861a5de2-02f4-4811-a973-8710ea65fb7c", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 2, Suit = 0, Value = 2 },
                        new { Id = "8b028707-700e-4edd-8392-c127a0a15e15", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 3, Suit = 0, Value = 3 },
                        new { Id = "fe0f539e-3d19-4a83-adaa-09503c2cc150", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 4, Suit = 0, Value = 4 },
                        new { Id = "f3b76664-eea1-4f96-b9d9-57b5ec36cc11", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 5, Suit = 0, Value = 5 },
                        new { Id = "b5ba4685-0ef8-426a-9ff3-b216a3e10b91", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 6, Suit = 0, Value = 6 },
                        new { Id = "359bb766-2dfd-443f-a85a-bf0f506cf50d", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 7, Suit = 0, Value = 7 },
                        new { Id = "a79aa69d-4824-4658-a523-4c6b7e9474d6", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 8, Suit = 0, Value = 8 },
                        new { Id = "65b80328-cd8a-4693-bb45-e9c36b1ad61e", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 9, Suit = 0, Value = 9 },
                        new { Id = "354c1147-db40-454e-b1c9-d5ffb7f4c7b6", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 10, Suit = 0, Value = 10 },
                        new { Id = "0f7d1581-8756-4168-8061-acbab9b31d62", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 11, Suit = 0, Value = 10 },
                        new { Id = "9ec00cd5-79eb-4159-82a0-a82bb227f9da", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 12, Suit = 0, Value = 10 },
                        new { Id = "5574737c-9667-4b5b-8390-048b3c1599f0", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 13, Suit = 0, Value = 10 },
                        new { Id = "2a837233-6209-42ad-bfbc-857dacf6f6ea", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 14, Suit = 0, Value = 11 },
                        new { Id = "d0ad5d49-5201-466f-91f7-7288579b7e08", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 2, Suit = 1, Value = 2 },
                        new { Id = "57d3ba8c-224e-4186-815b-4ed2e45939ce", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 3, Suit = 1, Value = 3 },
                        new { Id = "f66233aa-f690-460d-8e6b-17aaf0c8f5f4", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 4, Suit = 1, Value = 4 },
                        new { Id = "a71086c8-fdb1-4147-96ac-cdd4594e0876", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 5, Suit = 1, Value = 5 },
                        new { Id = "df6f5505-1814-479e-bacd-d84037fb4623", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 6, Suit = 1, Value = 6 },
                        new { Id = "ec87ad10-e31f-4875-935b-83638330148a", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 7, Suit = 1, Value = 7 },
                        new { Id = "63843953-f7f0-4a80-987c-79eccd8a7baf", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 8, Suit = 1, Value = 8 },
                        new { Id = "c232fc71-5082-472a-b265-90b96ff5729a", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 9, Suit = 1, Value = 9 },
                        new { Id = "2d927126-1c92-4019-8826-c0d76e5939a2", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 10, Suit = 1, Value = 10 },
                        new { Id = "519a6ff9-01a8-42e3-8473-433f5a27c4c9", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 11, Suit = 1, Value = 10 },
                        new { Id = "1ab36688-f1dc-4407-a925-950907599a61", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 12, Suit = 1, Value = 10 },
                        new { Id = "3d2f5063-1e3d-4e1c-8a54-a69697305f40", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 13, Suit = 1, Value = 10 },
                        new { Id = "83be744d-8d3c-4fc0-bd4d-fccdd3b44165", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 14, Suit = 1, Value = 11 },
                        new { Id = "befa2119-7490-4e4f-b144-9d33680d603a", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 2, Suit = 2, Value = 2 },
                        new { Id = "61aa7570-7994-47d0-9cca-67a5919522db", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 3, Suit = 2, Value = 3 },
                        new { Id = "1ee092e4-d576-4637-b197-b3225db5f075", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 4, Suit = 2, Value = 4 },
                        new { Id = "9d2e4827-6dfb-4c82-9f52-52f630441572", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 5, Suit = 2, Value = 5 },
                        new { Id = "22af53e4-cf15-448b-9570-ac7303a76163", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 6, Suit = 2, Value = 6 },
                        new { Id = "c2744c4a-dd99-468a-a1ff-663a43dcfca2", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 7, Suit = 2, Value = 7 },
                        new { Id = "10c93468-6ffe-4add-8946-ee1521d31951", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 8, Suit = 2, Value = 8 },
                        new { Id = "24a91bf6-3394-4a10-8f4a-4fa7cf9d28e4", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 9, Suit = 2, Value = 9 },
                        new { Id = "52b2a47d-c0dd-4034-8a6c-fbd839d9dda4", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 10, Suit = 2, Value = 10 },
                        new { Id = "5af52aeb-cca6-4a25-a6e3-2bd57b485308", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 11, Suit = 2, Value = 10 },
                        new { Id = "e5f54018-d490-4d8a-a067-cd3ac9c1f7b7", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 12, Suit = 2, Value = 10 },
                        new { Id = "ed2048ff-70b5-482a-91ec-51c8c549e989", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 13, Suit = 2, Value = 10 },
                        new { Id = "f4577691-d91c-4ea2-8117-793b9a0c2bc3", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 14, Suit = 2, Value = 11 },
                        new { Id = "550f4e7c-275d-41d8-97b4-c3baf6785a33", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 2, Suit = 3, Value = 2 },
                        new { Id = "78565830-4133-4660-acdc-ef7b2f174ce5", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 3, Suit = 3, Value = 3 },
                        new { Id = "68987ad1-c5fb-4bad-bfab-fed9cc754b30", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 4, Suit = 3, Value = 4 },
                        new { Id = "2095c7bb-d4a6-4ba8-b4e7-5cbdfe26d6f3", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 5, Suit = 3, Value = 5 },
                        new { Id = "557ef907-7a96-494f-8d6f-8d66dff933b6", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 6, Suit = 3, Value = 6 },
                        new { Id = "18a73630-53d3-4999-aaa2-94aac59e52d8", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 7, Suit = 3, Value = 7 },
                        new { Id = "6154987a-7707-4a6f-9c93-120642309ffb", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 8, Suit = 3, Value = 8 },
                        new { Id = "f31b18e6-4cbf-49b9-aeb9-4008145a0392", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 9, Suit = 3, Value = 9 },
                        new { Id = "257f2e2a-67ee-40be-b9f7-95491ddb498f", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 10, Suit = 3, Value = 10 },
                        new { Id = "812ee75d-4e2a-4ef2-9e68-098fce6926cb", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 11, Suit = 3, Value = 10 },
                        new { Id = "be240326-31e2-415c-b4f3-43648cc56d2a", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 12, Suit = 3, Value = 10 },
                        new { Id = "bf23482e-5719-45a8-9783-eac7ef13b559", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 13, Suit = 3, Value = 10 },
                        new { Id = "78a07d9d-f1fa-423b-b4ab-33151345c56b", CreationDate = new DateTime(2019, 4, 17, 15, 3, 37, 523, DateTimeKind.Utc), Rank = 14, Suit = 3, Value = 11 }
                    );
                });

            modelBuilder.Entity("BlackJackEntities.Entities.CardMove", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardId");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("GameId");

                    b.Property<int>("Move");

                    b.Property<string>("Name");

                    b.Property<string>("PlayerId");

                    b.Property<string>("Role");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("CardMoves");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.Game", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.GameUsers", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("GameId");

                    b.Property<string>("UserId");

                    b.Property<bool>("Winner");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("GameUsers");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.Player", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("GameId");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<int>("Points");

                    b.Property<string>("Role");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new { Id = "efd972d5-48c7-4108-a1db-68b8f2da4b9f", AccessFailedCount = 0, ConcurrencyStamp = "a045ba98-613e-4901-83ce-bbc7cd9c218b", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Dialer" },
                        new { Id = "f58367a9-838c-45d5-85b5-9a3bb06b57c7", AccessFailedCount = 0, ConcurrencyStamp = "d4bc531e-73c5-41c3-a538-ae2d29eb95ab", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot_1" },
                        new { Id = "994fa2fe-5d1e-482f-a335-e3848c67af1c", AccessFailedCount = 0, ConcurrencyStamp = "270d2ff4-07b8-4d09-a307-43550a5550c2", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot_2" },
                        new { Id = "355e2339-9a40-47ba-8e27-8dd10ac36c6b", AccessFailedCount = 0, ConcurrencyStamp = "6a72b196-a196-4a8d-a287-b8467076b229", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot_3" },
                        new { Id = "d4716ed8-4317-4d14-b232-ab9b94316f87", AccessFailedCount = 0, ConcurrencyStamp = "dd9d3f00-8f8d-4621-84b5-7755a5c333cc", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot_4" },
                        new { Id = "619c90cb-936f-4219-b71c-09cb12fb28b6", AccessFailedCount = 0, ConcurrencyStamp = "9b8c273f-081b-46ec-b482-ce82625a46e0", EmailConfirmed = false, LockoutEnabled = false, PhoneNumberConfirmed = false, Points = 0, Role = "Bot", TwoFactorEnabled = false, UserName = "Bot_5" }
                    );
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.CardMove", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Game")
                        .WithMany("CardMoves")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.GameUsers", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.HasOne("BlackJackEntities.Entities.Player", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BlackJackEntities.Entities.Player", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Game")
                        .WithMany("Users")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BlackJackEntities.Entities.Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
